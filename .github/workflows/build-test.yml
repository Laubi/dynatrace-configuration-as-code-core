name: Build and Test

# This workflow builds the code and runs the unit tests and integration tests.
#
# If this workflow is executed in the context of a fork, the integration tests are
# skipped and just the unit tests are executed. See the workflow "Trigger
# Integration Tests for Forks" for more details on how the integration tests are
# executed for forks.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # this is checking periodically if there are any breaking API changes
    # Every day at 00:00
    - cron: '0 0 * * *'

defaults:
  run:
    shell: bash

jobs:
  build_test:
    name: Build and Test
    permissions:
      contents: read
      checks: write
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: ‚¨áÔ∏è Check out code into the Go module directory
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

    - name: üõ†Ô∏è Set up Go 1.x
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe #v4.1.0
      with:
        go-version: '~1.20'

    - name: üèóÔ∏è Compile
      run: make compile

    - name: üß™ Unit test
      run: make test testopts="--junitfile test-result-${{ matrix.os }}-unit.xml"

    - name: ‚¨ÜÔ∏è Upload Test Results
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 #v3.1.3
      if: always()
      with:
        name: Test Results
        path: test-result-*.xml

  sonar:
    name: Sonar
    needs: [build_test]
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

    - uses: actions/download-artifact@v3
      with:
        name: test-result-ubuntu-latest-unit.xml

    - name: SonarCloud Scan
      if: ${{matrix.os}} == 'ubuntu-latest'
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  upload_event:
    name: "Upload Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 #v3.1.3
        with:
          name: event_file
          path: ${{ github.event_path }}
